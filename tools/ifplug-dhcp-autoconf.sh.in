#!/bin/sh
#
# Copyright (C) 2015 - 2020 Eaton
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#! \file    ifplug-dhcp-autoconf.sh
#  \brief   discover DHCP configured interfaces and put into ifplugd
#  \author  Jim Klimov <EvgenyKlimov@Eaton.com>
#  \details This script uses augeas-tools to discover interfaces
#           currently configured as DHCP clients, and puts them into ifplugd
#           configuration so they can reconfigure upon link up/down events.

# As an OS service this must use /bin/systemctl in its children in particular
PATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH
export PATH

[ -n "$SCRIPTDIR" -a -d "$SCRIPTDIR" ] || \
        SCRIPTDIR="$(cd "`dirname "$0"`" && pwd)" || \
        SCRIPTDIR="`pwd`/`dirname "$0"`" || \
        SCRIPTDIR="`dirname "$0"`"

# Include our standard routines for CI scripts
[ -s "$SCRIPTDIR/scriptlib.sh" ] &&
        . "$SCRIPTDIR"/scriptlib.sh || \
{ [ -s "$SCRIPTDIR/../tests/CI/scriptlib.sh" ] &&
        . "$SCRIPTDIR"/../tests/CI/scriptlib.sh ; } || \
{ echo "FATAL: $0: Can not include script library" >&2; exit 1; }
NEED_CHECKOUTDIR=no NEED_BUILDSUBDIR=no determineDirs_default || true
LOGMSG_PREFIX="FTY-IFPLUG-DHCP-"

( which augtool >/dev/null ) || die $? "augtool must be in PATH"

# By default, use our directory with a smaller selection of lenses to be faster
AUGTOOL_ARGS=""
if [ -d "@datadir@/@PACKAGE@/lenses" ] ; then
    AUGTOOL_ARGS="-S -I@datadir@/@PACKAGE@/lenses"
fi

# Start it if we stopped it to reconfigure at some point...
STOPPED_IFPLUGD=false
ifplugd_on() {
    logmsg_info "(Re-)starting ifplugd..."
    /bin/systemctl enable ifplugd.service && \
    /bin/systemctl restart ifplugd.service && \
    STOPPED_IFPLUGD=false && \
    logmsg_info "Enabled and (re-)started the systemd ifplugd.service"
}

ifplugd_off() {
    logmsg_info "Stopping ifplugd..."
    /bin/systemctl disable ifplugd.service || true
    /bin/systemctl stop ifplugd.service || true
    STOPPED_IFPLUGD=true
    logmsg_info "Disabled and perhaps stopped systemd ifplugd.service"
}

# Run augtools once and cache interesting data to speed up the process
# Note: "allow-auto" is an alias to "auto" => start interface at boot
# "allow-hotplug" => react to udev and/or link state change events
# (note that the latter might not happen however, per discussion at
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=838871 story)
AUGOUT="`(echo 'match /files/etc/network/interfaces/iface[*]'; echo 'match /files/etc/network/interfaces/auto[*]/*'; echo 'match /files/etc/network/interfaces/allow-hotplug[*]/*' ; echo 'match /files/etc/network/interfaces/iface[*]/method' ; echo 'match /files/etc/default/ifplugd/INTERFACES' ; echo 'match /files/etc/default/ifplugd/HOTPLUG_INTERFACES' ) | augtool $AUGTOOL_ARGS`" \
&& [ -n "$AUGOUT" ] \
&& AUGOUT="`echo "$AUGOUT" | egrep -v '\((none|no matches)\)'`" \
&& [ -n "$AUGOUT" ] \
|| die $? "Could not determine current settings"
logmsg_debug "AUGOUT = " "$AUGOUT"

extract_AUGOUT_string() {
    # Select a known single-string value from cached AUGOUT, remove surrounding quotes
    echo "$AUGOUT" | egrep "$1" | sed 's,^[^=]* = *,,' | sed 's,^\"\(.*\)\"$,\1,'
}

extract_AUGOUT_interface_array() {
    # Construct a string from an array of interface name values from
    # cached AUGOUT, prefixed by common "$1", without loopback interfaces
    # Note that depending on amount of lines in the file, the prefix may
    # be indexed like ".../auto[1]/2" or not for just one line ".../auto/2"
    echo "$AUGOUT" | egrep "$1"'(/|\[[0-9]*\]/)[0-9]* = ' | sed -e 's,^[^=]* = ,,' | tr ' ' '\n' | egrep -v '^lo|^$|(none)' | sort | uniq | tr '\n' ' ' | sed -e 's,^ *,,' -e 's, *$,,'
}

# Note: This may be revised or option-switched to find not DHCP interfaces,
# but something like "non-off, non-loopback" to monitor all active ones.
# Currently we pick all the "configured" interfaces with specific methods
# to get base entries like "/files/etc/network/interfaces/iface[4]" (= LAN3):
INTCONF="`echo "$AUGOUT" | egrep '/method *= *(dhcp|static|manual)$' | sed 's,/method .*$,,'`"
logmsg_debug "INTCONF = " "$INTCONF"

# names of interfaces with (allow-)auto setting:
AINTLIST="`extract_AUGOUT_interface_array '^/files/etc/network/interfaces/auto'`"
# names of interfaces with allow-hotplug:
HINTLIST="`extract_AUGOUT_interface_array '^/files/etc/network/interfaces/allow-hotplug'`"

# names of interfaces with a config method per above:
CINTLIST=""
if [ -z "${INTCONF}" ] ; then
    logmsg_debug "INTCONF is empty, no interfaces had interesting configuration methods"
else
    # Note: INTNUM is not really a number, but a numbered entry (commented above)
    for INTNUM in $INTCONF ; do
        INTNAME="`echo "$AUGOUT" | fgrep "$INTNUM = " | sed 's,^[^=]* = *,,'`" \
            || continue
        logmsg_debug "Found configured interface $INTNAME"
        [ -z "$CINTLIST" ] && CINTLIST="$INTNAME" || CINTLIST="$CINTLIST $INTNAME"
    done
fi

# We should first disable ifplugd with its old list of tracked interfaces,
# then change it, then maybe start it back up if the list is not empty
if [ -z "$CINTLIST" ]; then
    logmsg_info "No interfaces were currently seen configured as DHCP clients, static or manual (will clear the ifplugd list)"
else
    logmsg_info "The following interfaces were currently seen configured as DHCP clients, static or manual: $CINTLIST"
fi
if [ -z "$HINTLIST" ]; then
    logmsg_info "No interfaces were currently seen configured as 'allow-hotplug' (will clear the ifplugd list)"
else
    logmsg_info "The following interfaces were currently seen configured as 'allow-hotplug': $HINTLIST"
fi
logmsg_debug "AINTLIST     = $AINTLIST"

# INTLIST is about non-hotplug interfaces
if [ -z "$HINTLIST" ]; then
    INTLIST="$CINTLIST"
else
    # Find such configured interfaces that are not in HINTLIST
    # (may be "auto" or not, we currently do not care)
    INTLIST=""
    if [ -n "$CINTLIST" ] ; then
        for C in $CINTLIST ; do
            for H in $HINTLIST ; do
                [ "$C" = "$H" ] && continue 2
            done
            [ -z "$INTLIST" ] && INTLIST="$C" || INTLIST="$INTLIST $C"
        done
    fi
fi
logmsg_debug "INTLIST      = $INTLIST"

OLDINTLIST="`extract_AUGOUT_string ifplugd/INTERFACES`"
OLDHINTLIST="`extract_AUGOUT_string ifplugd/HOTPLUG_INTERFACES`"
logmsg_debug "OLDINTLIST   = $OLDINTLIST"
logmsg_debug "OLDHINTLIST  = $OLDHINTLIST"

if [ "$OLDINTLIST" = "$INTLIST" ] && [ "$OLDHINTLIST" = "$HINTLIST" ]; then
    logmsg_info "Existing configuration of ifplugd already matches this list, got nothing to change!"
else
    if ( [ -n "$OLDINTLIST" -a -z "$INTLIST" ] || [ -n "$OLDHINTLIST" -a -z "$HINTLIST" ] ) ; then
        logmsg_info "Existing configuration of ifplugd tracked INTERFACES='$OLDINTLIST' HOTPLUG_INTERFACES='$OLDHINTLIST'"
        if ! $STOPPED_IFPLUGD ; then
            logmsg_info "I will disable the ifplugd service before reconfiguring it"
            ifplugd_off
        fi
    fi

    logmsg_info "Applying changes to ifplugd configuration..."
    if ! ( /bin/echo -E set /files/etc/default/ifplugd/INTERFACES "\"\\\"$INTLIST\\\"\"" ; /bin/echo -E set /files/etc/default/ifplugd/HOTPLUG_INTERFACES "\"\\\"$HINTLIST\\\"\"" ) | augtool $AUGTOOL_ARGS -e -s ; then
        $STOPPED_IFPLUGD && ifplugd_on
        die "Could not apply changes to ifplugd config"
    fi
    if ! /bin/echo -E set /files/etc/default/networking/EXCLUDE_INTERFACES "\"\\\"$INTLIST $HINTLIST\\\"\"" | augtool $AUGTOOL_ARGS -e -s ; then
        logmsg_info "WARN: Could not apply changes to networking config, oh well"
    fi
fi

if $STOPPED_IFPLUGD ; then
    ifplugd_on || die $?
fi

logmsg_info "Started $0 $@"
